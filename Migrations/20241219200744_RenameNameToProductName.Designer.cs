// <auto-generated />
using System;
using InventoryManagement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventory_Management.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20241219200744_RenameNameToProductName")]
    partial class RenameNameToProductName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("InventoryManagement.CustomerEntity", b =>
                {
                    b.Property<int>("customerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("customerID"));

                    b.Property<string>("contactInfo")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("customerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("InventoryManagement.ProductEntity", b =>
                {
                    b.Property<int>("productID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("productID"));

                    b.Property<int?>("customerID")
                        .HasColumnType("int");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.Property<int?>("supplierID")
                        .HasColumnType("int");

                    b.HasKey("productID");

                    b.HasIndex("customerID");

                    b.HasIndex("supplierID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("InventoryManagement.SupplierEntity", b =>
                {
                    b.Property<int>("supplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("supplierID"));

                    b.Property<string>("contactInfo")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("supplierID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("InventoryManagement.TransactionEntity", b =>
                {
                    b.Property<int>("transactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("transactionID"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("productID")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("transactionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("transactionID");

                    b.HasIndex("productID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("InventoryManagement.ProductEntity", b =>
                {
                    b.HasOne("InventoryManagement.CustomerEntity", "customerEntity")
                        .WithMany("productEntities")
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("InventoryManagement.SupplierEntity", "supplierEntity")
                        .WithMany("productEntities")
                        .HasForeignKey("supplierID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("customerEntity");

                    b.Navigation("supplierEntity");
                });

            modelBuilder.Entity("InventoryManagement.TransactionEntity", b =>
                {
                    b.HasOne("InventoryManagement.ProductEntity", "productEntity")
                        .WithMany("transactionEntities")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("productEntity");
                });

            modelBuilder.Entity("InventoryManagement.CustomerEntity", b =>
                {
                    b.Navigation("productEntities");
                });

            modelBuilder.Entity("InventoryManagement.ProductEntity", b =>
                {
                    b.Navigation("transactionEntities");
                });

            modelBuilder.Entity("InventoryManagement.SupplierEntity", b =>
                {
                    b.Navigation("productEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
